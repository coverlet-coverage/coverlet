pool:
  vmImage: 'windows-latest'

variables:
- group: Sign Client Credentials # This is a variable group with secrets in it

steps:
- task: UseDotNet@2
  inputs:
    version: 6.0.416
  displayName: Install .NET Core SDK 6.0.416

- task: UseDotNet@2
  inputs:
    version: 7.0.403
  displayName: Install .NET Core SDK 7.0.403

- task: NuGetAuthenticate@0
  displayName: Authenticate with NuGet feeds

- script: dotnet pack -c Release /p:PublicRelease=false
  displayName: Create NuGet packages
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Schedule'))

- script: dotnet pack -c Release /p:PublicRelease=true
  displayName: Create NuGet packages
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))

- pwsh: |
    dotnet tool install --tool-path . sign --version 0.9.1-beta.23530.1
    .\sign code azure-key-vault `
    "**/*.nupkg" `
    --base-directory "$(Build.ArtifactStagingDirectory)/bin" `
    --publisher-name 'Coverlet' `
    --description "Cross platform code coverage for .NET" `
    --description-url "https://github.com/coverlet-coverage/coverlet" `
    --azure-key-vault-tenant-id "$(SignTenantId)" `
    --azure-key-vault-client-id "$(SignClientId)" `
    --azure-key-vault-client-secret '$(SignClientSecret)' `
    --azure-key-vault-certificate "$(SignKeyVaultCertificate)" `
    --azure-key-vault-url "$(SignKeyVaultUrl)"
  displayName: üîè Sign packages
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual')))
  enabled: false

- task: NuGetCommand@2
  inputs:
    command: push
    packagesToPush: $(Build.SourcesDirectory)/bin/Release/Packages/*.nupkg
    nuGetFeedType: internal
    publishVstsFeed: coverlet/coverlet-nightly
  displayName: Publish NuGet packages

- task: NuGetCommand@2
  inputs:
    command: push
    packagesToPush: $(Build.SourcesDirectory)/bin/Release/Packages/*.snupkg
    nuGetFeedType: internal
    publishVstsFeed: coverlet/coverlet-nightly
  displayName: Publish NuGet symbol packages
