trigger:
  branches:
    include: ["master", "*_validate"]
  paths:
    exclude: [".github", "Documentation", "*.md"]

variables:
  system.debug: false

jobs:
- job: Windows
  displayName: Windows
  continueOnError: 'true'
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 5
  strategy:
    matrix:
      Debug:
        buildConfiguration: "Debug"
      Release:
        buildConfiguration: "Release"
  pool:
    vmImage: 'windows-latest'
  steps:
  - template: build.yml
  - task: CopyFiles@2
    displayName: Collect packages
    inputs:
      SourceFolder: artifacts\package\$(BuildConfiguration)
      Contents: |
        *.nupkg
        *.snupkg
      TargetFolder: $(Build.ArtifactStagingDirectory)\Packages
    condition: eq(variables['BuildConfiguration'], 'Release')
  - task: PublishBuildArtifacts@1
    displayName: Publish packages as build artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)\Packages
      ArtifactName: Packages
      publishLocation: Container
    condition: eq(variables['BuildConfiguration'], 'Release')
  - template: CheckNugetStatus.yml
    parameters:
      sourcePath: '$(Build.SourcesDirectory)/src'
      breakBuild: false
     # nugetConfig: '$(Build.SourcesDirectory)/nuget.config'

- job: macOS
  displayName: macOS
  continueOnError: 'true'
  timeoutInMinutes: 10
  cancelTimeoutInMinutes: 5
  strategy:
    matrix:
      Debug:
        buildConfiguration: "Debug"
      Release:
        buildConfiguration: "Release"
  pool:
    vmImage: 'macOS-latest'
  steps:
  - template: build.yml

- job: Linux
  displayName: Linux
  continueOnError: 'true'
  timeoutInMinutes: 10
  cancelTimeoutInMinutes: 5
  strategy:
    matrix:
      Debug:
        buildConfiguration: "Debug"
      Release:
        buildConfiguration: "Release"
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: build.yml
