steps:
- task: UseDotNet@2
  inputs:
    version: 6.0.406
  displayName: Install .NET 6.0 SDK 6.0.406

- task: UseDotNet@2
  inputs:
    version: 7.0.200
  displayName: Install .NET 7.0 SDK 7.0.200

- script: dotnet restore
  displayName: Restore packages

- script: dotnet build -c $(BuildConfiguration) --no-restore
  displayName: Build

- script: dotnet pack -c $(BuildConfiguration) --no-restore
  displayName: Pack

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    arguments: -c $(BuildConfiguration) --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Include="[coverlet.collector]*%2c[coverlet.core]*%2c[coverlet.msbuild.tasks]*" /p:Exclude="[coverlet.core.tests.samples.netstandard]*%2c[coverlet.tests.xunit.extensions]*"
    testRunTitle: $(Agent.JobName)

- task: CopyFiles@2
  displayName: Copy Test Logs
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/test/coverlet.integration.tests/bin'
    contents: '**/log.*'
    targetFolder: $(Build.ArtifactStagingDirectory)/logs
  continueOnError: true
  condition: always()

- task: CopyFiles@2
  displayName: Copy Test Results
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    contents: '**/*.trx'
    targetFolder: $(Build.ArtifactStagingDirectory)
  continueOnError: true
  condition: always()

- task: PublishBuildArtifacts@1
  displayName: Publish Test Logs
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    PublishLocation: Container
    ArtifactName: 'TestLogs_$(Agent.OS)_$(BuildConfiguration)'
  continueOnError: true
  condition: always()

#- task: reportgenerator@5
#  displayName: ReportGenerator
#  condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Debug'))
#  inputs:
#    reports: $(Build.SourcesDirectory)/**/coverage.opencover.xml
#    targetdir: $(Build.SourcesDirectory)/CoverageReport
#    reporttypes: Html;HtmlInline_AzurePipelines_Dark;Cobertura
#    verbosity: 'Verbose'
#    assemblyfilters: ${{parameters.assemblyfilters}}

#- task: PublishCodeCoverageResults@1
#  displayName: 'Publish code coverage'
#  condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Debug'))
#  inputs:
#    codeCoverageTool: Cobertura
#    summaryFileLocation: '$(Build.SourcesDirectory)/CoverageReport/Cobertura.xml'
