<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyTitle>coverlet.collector</AssemblyTitle>
    <DevelopmentDependency>true</DevelopmentDependency>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- 
          suppress warning https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5128 
          If your package does not contain any lib/ or ref/ files and is not a meta-package, 
          it likely does not have any dependencies that the package consumer needs. 
          If you are packing with NuGet's MSBuild Pack target, you can set <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking> in any PropertyGroup in your project file.
    -->
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackBuildOutputs</TargetsForTfmSpecificContentInPackage>
    <!-- Open issue https://github.com/NuGet/Home/issues/8941 -->
    <MSBuildTreatWarningsAsErrors>true</MSBuildTreatWarningsAsErrors>
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    <NoWarn>$(NoWarn);NU5127</NoWarn>
    <IsPackable>true</IsPackable> 
  </PropertyGroup>

  <!-- Nuget package properties https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets -->
  <PropertyGroup>
    <Title>coverlet.collector</Title>
    <PackageId>coverlet.collector</PackageId>
    <Authors>tonerdo</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/coverlet-coverage/coverlet</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/tonerdo/coverlet/master/_assets/coverlet-icon.svg?sanitize=true</PackageIconUrl>
    <PackageIcon>coverlet-icon.png</PackageIcon>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Description>Coverlet is a cross platform code coverage library for .NET, with support for line, branch and method coverage.</Description>
    <PackageTags>coverage testing unit-test lcov opencover quality</PackageTags>
    <RepositoryType>git</RepositoryType>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>coverlet.collector.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="coverlet.core.tests" PublicKey="0024000004800000940000000602000000240000525341310004000001000100757cf9291d78a82e5bb58a827a3c46c2f959318327ad30d1b52e918321ffbd847fb21565b8576d2a3a24562a93e86c77a298b564a0f1b98f63d7a1441a3a8bcc206da3ed09d5dacc76e122a109a9d3ac608e21a054d667a2bae98510a1f0f653c0e6f58f42b4b3934f6012f5ec4a09b3dfd3e14d437ede1424bdb722aead64ad" />
    <InternalsVisibleTo Include="coverlet.collector.tests" PublicKey="0024000004800000940000000602000000240000525341310004000001000100ed0ed6af9693182615b8dcadc83c918b8d36312f86cefc69539d67d4189cd1b89420e7c3871802ffef7f5ca7816c68ad856c77bf7c230cc07824d96aa5d1237eebd30e246b9a14e22695fb26b40c800f74ea96619092cbd3a5d430d6c003fc7a82e8ccd1e315b935105d9232fe9e99e8d7ff54bba6f191959338d4a3169df9b3" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" PublicKey="0024000004800000940000000602000000240000525341310004000001000100c547cac37abd99c8db225ef2f6c8a3602f3b3606cc9891605d02baa56104f4cfc0734aa39b93bf7852f7d9266654753cc297e7d2edfe0bac1cdcf9f717241550e0a7b191195b7667bb4f64bcb8e2121380fd1d9d46ad2d92d2d15605093924cceaf74c4861eff62abf69b9291ed0a340e113be11e6a7d3113e92484cf7045cc7" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" />
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" />
    <PackageReference Include="NuGet.Frameworks" />
  </ItemGroup>

  <ItemGroup>
    <None Update="build\**" Pack="true" PackagePath="" />
    <None Include="$(MSBuildThisFileDirectory)..\..\_assets\coverlet-icon.png" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="Resources\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="Resources\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Resources\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(MSBuildThisFileDirectory)..\coverlet.core\coverlet.core.csproj" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="PackBuildOutputs">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(TargetDir)\*.dll" PackagePath="build\netstandard2.0\" />
      <TfmSpecificPackageFile Include="$(TargetDir)\*.pdb" PackagePath="build\netstandard2.0\" />
    </ItemGroup>
  </Target>
</Project>
